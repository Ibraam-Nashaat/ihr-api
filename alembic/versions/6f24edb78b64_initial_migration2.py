"""initial migration2

Revision ID: 6f24edb78b64
Revises: 
Create Date: 2025-06-15 19:59:45.170363

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6f24edb78b64'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ihr_asn',
    sa.Column('number', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tartiflette', sa.Boolean(), nullable=False),
    sa.Column('disco', sa.Boolean(), nullable=False),
    sa.Column('ashash', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('ihr_atlas_location',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=4), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_country',
    sa.Column('code', sa.String(length=4), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tartiflette', sa.Boolean(), nullable=False),
    sa.Column('disco', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('ihr_disco_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('mongoid', sa.String(length=24), nullable=False),
    sa.Column('streamtype', sa.String(length=10), nullable=False),
    sa.Column('streamname', sa.String(length=128), nullable=False),
    sa.Column('starttime', sa.DateTime(), nullable=False),
    sa.Column('endtime', sa.DateTime(), nullable=False),
    sa.Column('avglevel', sa.Float(), nullable=False),
    sa.Column('nbdiscoprobes', sa.Integer(), nullable=False),
    sa.Column('totalprobes', sa.Integer(), nullable=False),
    sa.Column('ongoing', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_tr_hegemony_identifier',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=4), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_delay_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('link', sa.String(length=128), nullable=False),
    sa.Column('medianrtt', sa.Float(), nullable=False),
    sa.Column('diffmedian', sa.Float(), nullable=False),
    sa.Column('deviation', sa.Float(), nullable=False),
    sa.Column('nbprobes', sa.Integer(), nullable=False),
    sa.Column('msm_prb_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_delay_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_forwarding_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('correlation', sa.Float(), nullable=False),
    sa.Column('responsibility', sa.Float(), nullable=False),
    sa.Column('pktdiff', sa.Float(), nullable=False),
    sa.Column('previoushop', sa.String(length=64), nullable=False),
    sa.Column('msm_prb_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_forwardingalarms_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_forwarding_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_hegemonycone',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('conesize', sa.Integer(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_ihr_hegemonycone_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemonycone', by_range('timebin', INTERVAL '2 day'));")
    op.execute("ALTER TABLE ihr_hegemonycone SET (timescaledb.compress, timescaledb.compress_segmentby = 'asn_id,af', timescaledb.compress_orderby = 'timebin');")
    op.execute("SELECT add_compression_policy('ihr_hegemonycone', INTERVAL '7 days');")
    op.create_table('ihr_metis_atlas_selection',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('metric', sa.String(length=16), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_metis_atlas_selection_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_metis_atlas_selection', by_range('timebin', INTERVAL '7 day'));")
    op.create_table('ihr_tr_hegemony',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hege', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('nbsamples', sa.Integer(), nullable=False),
    sa.Column('dependency_id', sa.BigInteger(), nullable=False),
    sa.Column('origin_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['dependency_id'], ['ihr_tr_hegemony_identifier.id'], name='fk_tr_hegemony_dependency_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_id'], ['ihr_tr_hegemony_identifier.id'], name='fk_tr_hegemony_origin_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_tr_hegemony', by_range('timebin', INTERVAL '2 day'));")
    op.execute('CREATE INDEX IF NOT EXISTS ihr_delay_alarms_asn_id_timebin_idx ON ihr_delay_alarms (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_disco_events_mongoid_3a488192 ON ihr_disco_events (mongoid);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_disco_events_streamtype_streamname_st_bda16df6_idx ON ihr_disco_events (streamtype, streamname, starttime, endtime);')
    op.execute('CREATE INDEX IF NOT EXISTS "ihr_forwarding_alarms_asn_id_timebin_idx" ON ihr_forwarding_alarms (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemonycone_asn_id_timebin_idx ON ihr_hegemonycone (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_metis_atlas_selection_metric_rank_timebin_idx ON ihr_metis_atlas_selection (metric, rank, timebin);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_tr_hegemony_dependency_id_timebin_idx ON ihr_tr_hegemony (dependency_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_tr_hegemony_origin_id_timebin_idx ON ihr_tr_hegemony (origin_id, timebin DESC);')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE ihr_hegemonycone SET (timescaledb.compress = false);')
    op.execute("SELECT remove_compression_policy('ihr_hegemonycone', if_exists => TRUE);")
    op.execute('DROP INDEX IF EXISTS ihr_delay_alarms_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_disco_events_mongoid_3a488192;')
    op.execute('DROP INDEX IF EXISTS ihr_disco_events_streamtype_streamname_st_bda16df6_idx;')
    op.execute('DROP INDEX IF EXISTS "ihr_forwarding_alarms_asn_id_timebin_idx";')
    op.execute('DROP INDEX IF EXISTS ihr_hegemonycone_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_metis_atlas_selection_metric_rank_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_tr_hegemony_dependency_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_tr_hegemony_origin_id_timebin_idx;')
    op.drop_table('ihr_tr_hegemony')
    op.drop_table('ihr_metis_atlas_selection')
    op.drop_table('ihr_hegemonycone')
    op.drop_table('ihr_forwarding_alarms')
    op.drop_table('ihr_delay_alarms')
    op.drop_table('ihr_tr_hegemony_identifier')
    op.drop_table('ihr_disco_events')
    op.drop_table('ihr_country')
    op.drop_table('ihr_atlas_location')
    op.drop_table('ihr_asn')
    # ### end Alembic commands ###
