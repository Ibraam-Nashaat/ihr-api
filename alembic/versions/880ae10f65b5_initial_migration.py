"""initial migration

Revision ID: 880ae10f65b5
Revises: 
Create Date: 2025-06-19 15:39:01.419361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '880ae10f65b5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ihr_asn',
    sa.Column('number', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tartiflette', sa.Boolean(), nullable=False),
    sa.Column('disco', sa.Boolean(), nullable=False),
    sa.Column('ashash', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('ihr_atlas_location',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=4), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_country',
    sa.Column('code', sa.String(length=4), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tartiflette', sa.Boolean(), nullable=False),
    sa.Column('disco', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('ihr_disco_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('mongoid', sa.String(length=24), nullable=False),
    sa.Column('streamtype', sa.String(length=10), nullable=False),
    sa.Column('streamname', sa.String(length=128), nullable=False),
    sa.Column('starttime', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('endtime', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('avglevel', sa.Float(), nullable=False),
    sa.Column('nbdiscoprobes', sa.Integer(), nullable=False),
    sa.Column('totalprobes', sa.Integer(), nullable=False),
    sa.Column('ongoing', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_tr_hegemony_identifier',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=4), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_atlas_delay',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('median', sa.Float(), nullable=False),
    sa.Column('nbtracks', sa.Integer(), nullable=False),
    sa.Column('nbprobes', sa.Integer(), nullable=False),
    sa.Column('entropy', sa.Float(), nullable=False),
    sa.Column('hop', sa.Integer(), nullable=False),
    sa.Column('nbrealrtts', sa.Integer(), nullable=False),
    sa.Column('startpoint_id', sa.BigInteger(), nullable=False),
    sa.Column('endpoint_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['endpoint_id'], ['ihr_atlas_location.id'], name='fk_atlas_delay_endpoint', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['startpoint_id'], ['ihr_atlas_location.id'], name='fk_atlas_delay_startpoint', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_atlas_delay', by_range('timebin', INTERVAL '2 day'));")
    op.execute("ALTER TABLE ihr_atlas_delay SET (timescaledb.compress, timescaledb.compress_segmentby = 'startpoint_id,endpoint_id', timescaledb.compress_orderby = 'timebin');")
    op.execute("SELECT add_compression_policy('ihr_atlas_delay', INTERVAL '7 days');")
    op.create_table('ihr_atlas_delay_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('deviation', sa.Float(), nullable=False),
    sa.Column('startpoint_id', sa.BigInteger(), nullable=False),
    sa.Column('endpoint_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['endpoint_id'], ['ihr_atlas_location.id'], name='fk_atlas_delay_endpoint', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['startpoint_id'], ['ihr_atlas_location.id'], name='fk_atlas_delay_startpoint', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_atlas_delay_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_delay',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('magnitude', sa.Float(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_delay_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_delay', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_delay_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('link', sa.String(length=128), nullable=False),
    sa.Column('medianrtt', sa.Float(), nullable=False),
    sa.Column('diffmedian', sa.Float(), nullable=False),
    sa.Column('deviation', sa.Float(), nullable=False),
    sa.Column('nbprobes', sa.Integer(), nullable=False),
    sa.Column('msm_prb_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_delay_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_disco_probes',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('probe_id', sa.Integer(), nullable=False),
    sa.Column('starttime', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('endtime', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('level', sa.Float(), nullable=False),
    sa.Column('ipv4', sa.String(length=64), nullable=False),
    sa.Column('prefixv4', sa.String(length=70), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['ihr_disco_events.id'], name='fk_disco_probes_event_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_forwarding',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('magnitude', sa.Float(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_forwarding_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_forwarding', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_forwarding_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('correlation', sa.Float(), nullable=False),
    sa.Column('responsibility', sa.Float(), nullable=False),
    sa.Column('pktdiff', sa.Float(), nullable=False),
    sa.Column('previoushop', sa.String(length=64), nullable=False),
    sa.Column('msm_prb_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_forwardingalarms_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_forwarding_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_hegemony',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hege', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.Column('originasn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_hegemony_asn_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['originasn_id'], ['ihr_asn.number'], name='fk_hegemony_originasn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemony', by_range('timebin', INTERVAL '2 day'));")
    op.execute("ALTER TABLE ihr_hegemony SET (timescaledb.compress, timescaledb.compress_segmentby = 'af,originasn_id,asn_id', timescaledb.compress_orderby = 'timebin');")
    op.execute("SELECT add_compression_policy('ihr_hegemony', INTERVAL '7 days');")
    op.create_table('ihr_hegemony_alarms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('deviation', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.Column('originasn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_hegemony_alarms_asn_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['originasn_id'], ['ihr_asn.number'], name='fk_hegemony_alarms_originasn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemony_alarms', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_hegemony_country',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hege', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('weightscheme', sa.String(length=16), nullable=False),
    sa.Column('transitonly', sa.Boolean(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.Column('country_id', sa.String(length=4), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_hegemony_country_asn_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['country_id'], ['ihr_country.code'], name='fk_hegemony_country_country_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemony_country', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_hegemony_prefix',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('prefix', sa.String(length=64), nullable=False),
    sa.Column('hege', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('visibility', sa.Float(), nullable=False),
    sa.Column('rpki_status', sa.String(length=32), nullable=False),
    sa.Column('irr_status', sa.String(length=32), nullable=False),
    sa.Column('delegated_prefix_status', sa.String(length=32), nullable=False),
    sa.Column('delegated_asn_status', sa.String(length=32), nullable=False),
    sa.Column('descr', sa.String(length=64), nullable=False),
    sa.Column('moas', sa.Boolean(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.Column('originasn_id', sa.BigInteger(), nullable=False),
    sa.Column('country_id', sa.String(length=4), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_hegemony_prefix_asn_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['country_id'], ['ihr_country.code'], name='fk_hegemony_prefix_country_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['originasn_id'], ['ihr_asn.number'], name='fk_hegemony_prefix_originasn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemony_prefix', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_hegemonycone',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('conesize', sa.Integer(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_ihr_hegemonycone_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_hegemonycone', by_range('timebin', INTERVAL '2 day'));")
    op.execute("ALTER TABLE ihr_hegemonycone SET (timescaledb.compress, timescaledb.compress_segmentby = 'asn_id,af', timescaledb.compress_orderby = 'timebin');")
    op.execute("SELECT add_compression_policy('ihr_hegemonycone', INTERVAL '7 days');")
    op.create_table('ihr_metis_atlas_deployment',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('metric', sa.String(length=16), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('nbsamples', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_metis_atlas_deployment_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_metis_atlas_deployment', by_range('timebin', INTERVAL '7 day'));")
    op.create_table('ihr_metis_atlas_selection',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('metric', sa.String(length=16), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('asn_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ihr_asn.number'], name='fk_metis_atlas_selection_asn_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_metis_atlas_selection', by_range('timebin', INTERVAL '7 day'));")
    op.create_table('ihr_tr_hegemony',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timebin', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hege', sa.Float(), nullable=False),
    sa.Column('af', sa.Integer(), nullable=False),
    sa.Column('nbsamples', sa.Integer(), nullable=False),
    sa.Column('dependency_id', sa.BigInteger(), nullable=False),
    sa.Column('origin_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['dependency_id'], ['ihr_tr_hegemony_identifier.id'], name='fk_tr_hegemony_dependency_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_id'], ['ihr_tr_hegemony_identifier.id'], name='fk_tr_hegemony_origin_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'timebin')
    )
    op.execute("SELECT create_hypertable('ihr_tr_hegemony', by_range('timebin', INTERVAL '2 day'));")
    op.create_table('ihr_delay_alarms_msms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('msmid', sa.BigInteger(), nullable=False),
    sa.Column('probeid', sa.Integer(), nullable=False),
    sa.Column('alarm_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['alarm_id'], ['ihr_delay_alarms.id'], name='fk_delay_alarms_msms_alarm_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ihr_forwarding_alarms_msms',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('msmid', sa.BigInteger(), nullable=False),
    sa.Column('probeid', sa.Integer(), nullable=False),
    sa.Column('alarm_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['alarm_id'], ['ihr_forwarding_alarms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute('CREATE INDEX IF NOT EXISTS ihr_atlas_delay_endpoint_id_timebin_idx ON ihr_atlas_delay (endpoint_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_atlas_delay_startpoint_id_endpoint_id_timebin_idx ON ihr_atlas_delay (startpoint_id, endpoint_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_atlas_delay_startpoint_id_timebin_idx ON ihr_atlas_delay (startpoint_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_atlas_delay_alarms_startpoint_id_timebin_idx ON ihr_atlas_delay_alarms (startpoint_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_atlas_delay_alarms_endpoint_id_timebin_idx ON ihr_atlas_delay_alarms (endpoint_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_delay_asn_id_timebin_idx ON ihr_delay (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_delay_alarms_asn_id_timebin_idx ON ihr_delay_alarms (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_disco_events_mongoid_3a488192 ON ihr_disco_events (mongoid);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_disco_events_streamtype_streamname_st_bda16df6_idx ON ihr_disco_events (streamtype, streamname, starttime, endtime);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_forwarding_asn_id_timebin_idx ON ihr_forwarding (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_forwarding_alarms_asn_id_timebin_idx ON ihr_forwarding_alarms (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_asn_id_timebin_idx ON ihr_hegemony (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_originasn_id_timebin_idx ON ihr_hegemony (originasn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_asn_id_originasn_id_timebin_idx ON ihr_hegemony (asn_id, originasn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemonycone_asn_id_timebin_idx ON ihr_hegemonycone (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_alarms_asn_id_timebin_idx ON ihr_hegemony_alarms (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_alarms_originasn_id_timebin_idx ON ihr_hegemony_alarms (originasn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_country_asn_id_timebin_idx ON ihr_hegemony_country (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_country_country_id_timebin_idx ON ihr_hegemony_country (country_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_prefix_prefix_timebin_idx ON ihr_hegemony_prefix (prefix, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_prefix_asn_id_timebin_idx ON ihr_hegemony_prefix (asn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_prefix_originasn_id_timebin_idx ON ihr_hegemony_prefix (originasn_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_hegemony_prefix_country_id_timebin_idx ON ihr_hegemony_prefix (country_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_metis_atlas_deployment_metric_rank_timebin_idx ON ihr_metis_atlas_deployment (metric, rank, timebin);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_metis_atlas_selection_metric_rank_timebin_idx ON ihr_metis_atlas_selection (metric, rank, timebin);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_tr_hegemony_dependency_id_timebin_idx ON ihr_tr_hegemony (dependency_id, timebin DESC);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_tr_hegemony_origin_id_timebin_idx ON ihr_tr_hegemony (origin_id, timebin DESC);')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE ihr_atlas_delay SET (timescaledb.compress = false);')
    op.execute("SELECT remove_compression_policy('ihr_atlas_delay', if_exists => TRUE);")
    op.execute('ALTER TABLE ihr_hegemony SET (timescaledb.compress = false);')
    op.execute("SELECT remove_compression_policy('ihr_hegemony', if_exists => TRUE);")
    op.execute('ALTER TABLE ihr_hegemonycone SET (timescaledb.compress = false);')
    op.execute("SELECT remove_compression_policy('ihr_hegemonycone', if_exists => TRUE);")
    op.execute('DROP INDEX IF EXISTS ihr_atlas_delay_endpoint_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_atlas_delay_startpoint_id_endpoint_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_atlas_delay_startpoint_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_atlas_delay_alarms_startpoint_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_atlas_delay_alarms_endpoint_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_delay_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_delay_alarms_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_disco_events_mongoid_3a488192;')
    op.execute('DROP INDEX IF EXISTS ihr_disco_events_streamtype_streamname_st_bda16df6_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_forwarding_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_forwarding_alarms_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_originasn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_asn_id_originasn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemonycone_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_alarms_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_alarms_originasn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_country_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_country_country_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_prefix_prefix_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_prefix_asn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_prefix_originasn_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_hegemony_prefix_country_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_metis_atlas_deployment_metric_rank_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_metis_atlas_selection_metric_rank_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_tr_hegemony_dependency_id_timebin_idx;')
    op.execute('DROP INDEX IF EXISTS ihr_tr_hegemony_origin_id_timebin_idx;')
    op.drop_table('ihr_forwarding_alarms_msms')
    op.drop_table('ihr_delay_alarms_msms')
    op.drop_table('ihr_tr_hegemony')
    op.drop_table('ihr_metis_atlas_selection')
    op.drop_table('ihr_metis_atlas_deployment')
    op.drop_table('ihr_hegemonycone')
    op.drop_table('ihr_hegemony_prefix')
    op.drop_table('ihr_hegemony_country')
    op.drop_table('ihr_hegemony_alarms')
    op.drop_table('ihr_hegemony')
    op.drop_table('ihr_forwarding_alarms')
    op.drop_table('ihr_forwarding')
    op.drop_table('ihr_disco_probes')
    op.drop_table('ihr_delay_alarms')
    op.drop_table('ihr_delay')
    op.drop_table('ihr_atlas_delay_alarms')
    op.drop_table('ihr_atlas_delay')
    op.drop_table('ihr_tr_hegemony_identifier')
    op.drop_table('ihr_disco_events')
    op.drop_table('ihr_country')
    op.drop_table('ihr_atlas_location')
    op.drop_table('ihr_asn')
    # ### end Alembic commands ###
