"""second migration

Revision ID: 852def42fccc
Revises: 
Create Date: 2025-06-19 19:32:34.889779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '852def42fccc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ihr_atlas_delay', 'startpoint_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('ihr_atlas_delay', 'endpoint_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.create_foreign_key('fk_atlas_delay_endpoint', 'ihr_atlas_delay', 'ihr_atlas_location', ['endpoint_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_atlas_delay_startpoint', 'ihr_atlas_delay', 'ihr_atlas_location', ['startpoint_id'], ['id'], ondelete='CASCADE')
    op.alter_column('ihr_atlas_delay_alarms', 'startpoint_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('ihr_atlas_delay_alarms', 'endpoint_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.create_foreign_key('fk_atlas_delay_endpoint', 'ihr_atlas_delay_alarms', 'ihr_atlas_location', ['endpoint_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_atlas_delay_startpoint', 'ihr_atlas_delay_alarms', 'ihr_atlas_location', ['startpoint_id'], ['id'], ondelete='CASCADE')
    op.alter_column('ihr_atlas_location', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key('fk_delay_asn_id', 'ihr_delay', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ihr_delay_alarms', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.alter_column('ihr_delay_alarms_msms', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_delay_alarms_msms', 'alarm_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('ihr_disco_events', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_disco_probes', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_disco_probes', 'event_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.drop_constraint('ihr_disco_probes_event_id_64ec2998_fk_ihr_disco_events_id', 'ihr_disco_probes', type_='foreignkey')
    op.create_foreign_key('fk_disco_probes_event_id', 'ihr_disco_probes', 'ihr_disco_events', ['event_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_forwarding_asn_id', 'ihr_forwarding', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_forwardingalarms_asn_id', 'ihr_forwarding_alarms', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.alter_column('ihr_forwarding_alarms_msms', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_forwarding_alarms_msms', 'alarm_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.create_foreign_key('fk_hegemony_originasn_id', 'ihr_hegemony', 'ihr_asn', ['originasn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_asn_id', 'ihr_hegemony', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_alarms_asn_id', 'ihr_hegemony_alarms', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_alarms_originasn_id', 'ihr_hegemony_alarms', 'ihr_asn', ['originasn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_country_asn_id', 'ihr_hegemony_country', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_country_country_id', 'ihr_hegemony_country', 'ihr_country', ['country_id'], ['code'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_prefix_originasn_id', 'ihr_hegemony_prefix', 'ihr_asn', ['originasn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_prefix_asn_id', 'ihr_hegemony_prefix', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_hegemony_prefix_country_id', 'ihr_hegemony_prefix', 'ihr_country', ['country_id'], ['code'], ondelete='CASCADE')
    op.create_foreign_key('fk_metis_atlas_deployment_asn_id', 'ihr_metis_atlas_deployment', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.create_foreign_key('fk_metis_atlas_selection_asn_id', 'ihr_metis_atlas_selection', 'ihr_asn', ['asn_id'], ['number'], ondelete='CASCADE')
    op.alter_column('ihr_tr_hegemony', 'dependency_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('ihr_tr_hegemony', 'origin_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.create_foreign_key('fk_tr_hegemony_dependency_id', 'ihr_tr_hegemony', 'ihr_tr_hegemony_identifier', ['dependency_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_tr_hegemony_origin_id', 'ihr_tr_hegemony', 'ihr_tr_hegemony_identifier', ['origin_id'], ['id'], ondelete='CASCADE')
    op.alter_column('ihr_tr_hegemony_identifier', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.execute('CREATE INDEX IF NOT EXISTS ihr_delay_alarms_msms_alarm_id ON ihr_delay_alarms_msms (alarm_id);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_disco_probes_event_id ON ihr_disco_probes (event_id);')
    op.execute('CREATE INDEX IF NOT EXISTS ihr_forwarding_alarms_msms_alarm_id ON ihr_forwarding_alarms_msms (alarm_id);')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP INDEX IF EXISTS ihr_delay_alarms_msms_alarm_id;')
    op.execute('DROP INDEX IF EXISTS ihr_disco_probes_event_id;')
    op.execute('DROP INDEX IF EXISTS ihr_forwarding_alarms_msms_alarm_id;')
    op.alter_column('ihr_tr_hegemony_identifier', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint('fk_tr_hegemony_origin_id', 'ihr_tr_hegemony', type_='foreignkey')
    op.drop_constraint('fk_tr_hegemony_dependency_id', 'ihr_tr_hegemony', type_='foreignkey')
    op.alter_column('ihr_tr_hegemony', 'origin_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_tr_hegemony', 'dependency_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint('fk_metis_atlas_selection_asn_id', 'ihr_metis_atlas_selection', type_='foreignkey')
    op.drop_constraint('fk_metis_atlas_deployment_asn_id', 'ihr_metis_atlas_deployment', type_='foreignkey')
    op.drop_constraint('fk_hegemony_prefix_country_id', 'ihr_hegemony_prefix', type_='foreignkey')
    op.drop_constraint('fk_hegemony_prefix_asn_id', 'ihr_hegemony_prefix', type_='foreignkey')
    op.drop_constraint('fk_hegemony_prefix_originasn_id', 'ihr_hegemony_prefix', type_='foreignkey')
    op.drop_constraint('fk_hegemony_country_country_id', 'ihr_hegemony_country', type_='foreignkey')
    op.drop_constraint('fk_hegemony_country_asn_id', 'ihr_hegemony_country', type_='foreignkey')
    op.drop_constraint('fk_hegemony_alarms_originasn_id', 'ihr_hegemony_alarms', type_='foreignkey')
    op.drop_constraint('fk_hegemony_alarms_asn_id', 'ihr_hegemony_alarms', type_='foreignkey')
    op.drop_constraint('fk_hegemony_asn_id', 'ihr_hegemony', type_='foreignkey')
    op.drop_constraint('fk_hegemony_originasn_id', 'ihr_hegemony', type_='foreignkey')
    op.alter_column('ihr_forwarding_alarms_msms', 'alarm_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_forwarding_alarms_msms', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint('fk_forwardingalarms_asn_id', 'ihr_forwarding_alarms', type_='foreignkey')
    op.drop_constraint('fk_forwarding_asn_id', 'ihr_forwarding', type_='foreignkey')
    op.drop_constraint('fk_disco_probes_event_id', 'ihr_disco_probes', type_='foreignkey')
    op.create_foreign_key('ihr_disco_probes_event_id_64ec2998_fk_ihr_disco_events_id', 'ihr_disco_probes', 'ihr_disco_events', ['event_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.alter_column('ihr_disco_probes', 'event_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_disco_probes', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_disco_events', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ihr_delay_alarms_msms', 'alarm_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_delay_alarms_msms', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'ihr_delay_alarms', type_='foreignkey')
    op.drop_constraint('fk_delay_asn_id', 'ihr_delay', type_='foreignkey')
    op.alter_column('ihr_atlas_location', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint('fk_atlas_delay_startpoint', 'ihr_atlas_delay_alarms', type_='foreignkey')
    op.drop_constraint('fk_atlas_delay_endpoint', 'ihr_atlas_delay_alarms', type_='foreignkey')
    op.alter_column('ihr_atlas_delay_alarms', 'endpoint_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_atlas_delay_alarms', 'startpoint_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint('fk_atlas_delay_startpoint', 'ihr_atlas_delay', type_='foreignkey')
    op.drop_constraint('fk_atlas_delay_endpoint', 'ihr_atlas_delay', type_='foreignkey')
    op.alter_column('ihr_atlas_delay', 'endpoint_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ihr_atlas_delay', 'startpoint_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
